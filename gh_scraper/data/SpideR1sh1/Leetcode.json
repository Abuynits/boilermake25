{"description": "Collection of LeetCode questions to ace the coding interview! - Created using [LeetHub](https://github.com/QasimWani/LeetHub)", "readme": "# Leetcode\nCollection of LeetCode questions to ace the coding interview! - Created using [LeetHub](https://github.com/QasimWani/LeetHub)\n\n<!---LeetCode Topics Start-->\n# LeetCode Topics\n## Array\n|  |\n| ------- |\n| [0001-two-sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0001-two-sum) |\n| [0011-container-with-most-water](https://github.com/SpideR1sh1/Leetcode/tree/master/0011-container-with-most-water) |\n| [0015-3sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0015-3sum) |\n| [0018-4sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0018-4sum) |\n| [0033-search-in-rotated-sorted-array](https://github.com/SpideR1sh1/Leetcode/tree/master/0033-search-in-rotated-sorted-array) |\n| [0074-search-a-2d-matrix](https://github.com/SpideR1sh1/Leetcode/tree/master/0074-search-a-2d-matrix) |\n| [0081-search-in-rotated-sorted-array-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0081-search-in-rotated-sorted-array-ii) |\n| [0121-best-time-to-buy-and-sell-stock](https://github.com/SpideR1sh1/Leetcode/tree/master/0121-best-time-to-buy-and-sell-stock) |\n| [0153-find-minimum-in-rotated-sorted-array](https://github.com/SpideR1sh1/Leetcode/tree/master/0153-find-minimum-in-rotated-sorted-array) |\n| [0167-two-sum-ii-input-array-is-sorted](https://github.com/SpideR1sh1/Leetcode/tree/master/0167-two-sum-ii-input-array-is-sorted) |\n| [0217-contains-duplicate](https://github.com/SpideR1sh1/Leetcode/tree/master/0217-contains-duplicate) |\n| [0238-product-of-array-except-self](https://github.com/SpideR1sh1/Leetcode/tree/master/0238-product-of-array-except-self) |\n| [0271-encode-and-decode-strings](https://github.com/SpideR1sh1/Leetcode/tree/master/0271-encode-and-decode-strings) |\n| [0287-find-the-duplicate-number](https://github.com/SpideR1sh1/Leetcode/tree/master/0287-find-the-duplicate-number) |\n| [0792-binary-search](https://github.com/SpideR1sh1/Leetcode/tree/master/0792-binary-search) |\n| [0907-koko-eating-bananas](https://github.com/SpideR1sh1/Leetcode/tree/master/0907-koko-eating-bananas) |\n## Hash Table\n|  |\n| ------- |\n| [0001-two-sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0001-two-sum) |\n| [0003-longest-substring-without-repeating-characters](https://github.com/SpideR1sh1/Leetcode/tree/master/0003-longest-substring-without-repeating-characters) |\n| [0141-linked-list-cycle](https://github.com/SpideR1sh1/Leetcode/tree/master/0141-linked-list-cycle) |\n| [0142-linked-list-cycle-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0142-linked-list-cycle-ii) |\n| [0208-implement-trie-prefix-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0208-implement-trie-prefix-tree) |\n| [0217-contains-duplicate](https://github.com/SpideR1sh1/Leetcode/tree/master/0217-contains-duplicate) |\n| [0424-longest-repeating-character-replacement](https://github.com/SpideR1sh1/Leetcode/tree/master/0424-longest-repeating-character-replacement) |\n| [1987-substrings-of-size-three-with-distinct-characters](https://github.com/SpideR1sh1/Leetcode/tree/master/1987-substrings-of-size-three-with-distinct-characters) |\n## Linked List\n|  |\n| ------- |\n| [0002-add-two-numbers](https://github.com/SpideR1sh1/Leetcode/tree/master/0002-add-two-numbers) |\n| [0019-remove-nth-node-from-end-of-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0019-remove-nth-node-from-end-of-list) |\n| [0021-merge-two-sorted-lists](https://github.com/SpideR1sh1/Leetcode/tree/master/0021-merge-two-sorted-lists) |\n| [0141-linked-list-cycle](https://github.com/SpideR1sh1/Leetcode/tree/master/0141-linked-list-cycle) |\n| [0142-linked-list-cycle-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0142-linked-list-cycle-ii) |\n| [0143-reorder-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0143-reorder-list) |\n| [0206-reverse-linked-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0206-reverse-linked-list) |\n## Math\n|  |\n| ------- |\n| [0002-add-two-numbers](https://github.com/SpideR1sh1/Leetcode/tree/master/0002-add-two-numbers) |\n## Recursion\n|  |\n| ------- |\n| [0002-add-two-numbers](https://github.com/SpideR1sh1/Leetcode/tree/master/0002-add-two-numbers) |\n| [0021-merge-two-sorted-lists](https://github.com/SpideR1sh1/Leetcode/tree/master/0021-merge-two-sorted-lists) |\n| [0143-reorder-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0143-reorder-list) |\n| [0206-reverse-linked-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0206-reverse-linked-list) |\n## String\n|  |\n| ------- |\n| [0003-longest-substring-without-repeating-characters](https://github.com/SpideR1sh1/Leetcode/tree/master/0003-longest-substring-without-repeating-characters) |\n| [0125-valid-palindrome](https://github.com/SpideR1sh1/Leetcode/tree/master/0125-valid-palindrome) |\n| [0208-implement-trie-prefix-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0208-implement-trie-prefix-tree) |\n| [0271-encode-and-decode-strings](https://github.com/SpideR1sh1/Leetcode/tree/master/0271-encode-and-decode-strings) |\n| [0344-reverse-string](https://github.com/SpideR1sh1/Leetcode/tree/master/0344-reverse-string) |\n| [0424-longest-repeating-character-replacement](https://github.com/SpideR1sh1/Leetcode/tree/master/0424-longest-repeating-character-replacement) |\n| [0680-valid-palindrome-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0680-valid-palindrome-ii) |\n| [1987-substrings-of-size-three-with-distinct-characters](https://github.com/SpideR1sh1/Leetcode/tree/master/1987-substrings-of-size-three-with-distinct-characters) |\n## Sliding Window\n|  |\n| ------- |\n| [0003-longest-substring-without-repeating-characters](https://github.com/SpideR1sh1/Leetcode/tree/master/0003-longest-substring-without-repeating-characters) |\n| [0424-longest-repeating-character-replacement](https://github.com/SpideR1sh1/Leetcode/tree/master/0424-longest-repeating-character-replacement) |\n| [1987-substrings-of-size-three-with-distinct-characters](https://github.com/SpideR1sh1/Leetcode/tree/master/1987-substrings-of-size-three-with-distinct-characters) |\n## Sorting\n|  |\n| ------- |\n| [0015-3sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0015-3sum) |\n| [0018-4sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0018-4sum) |\n| [0217-contains-duplicate](https://github.com/SpideR1sh1/Leetcode/tree/master/0217-contains-duplicate) |\n## Dynamic Programming\n|  |\n| ------- |\n| [0121-best-time-to-buy-and-sell-stock](https://github.com/SpideR1sh1/Leetcode/tree/master/0121-best-time-to-buy-and-sell-stock) |\n## Two Pointers\n|  |\n| ------- |\n| [0011-container-with-most-water](https://github.com/SpideR1sh1/Leetcode/tree/master/0011-container-with-most-water) |\n| [0015-3sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0015-3sum) |\n| [0018-4sum](https://github.com/SpideR1sh1/Leetcode/tree/master/0018-4sum) |\n| [0019-remove-nth-node-from-end-of-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0019-remove-nth-node-from-end-of-list) |\n| [0125-valid-palindrome](https://github.com/SpideR1sh1/Leetcode/tree/master/0125-valid-palindrome) |\n| [0141-linked-list-cycle](https://github.com/SpideR1sh1/Leetcode/tree/master/0141-linked-list-cycle) |\n| [0142-linked-list-cycle-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0142-linked-list-cycle-ii) |\n| [0143-reorder-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0143-reorder-list) |\n| [0167-two-sum-ii-input-array-is-sorted](https://github.com/SpideR1sh1/Leetcode/tree/master/0167-two-sum-ii-input-array-is-sorted) |\n| [0287-find-the-duplicate-number](https://github.com/SpideR1sh1/Leetcode/tree/master/0287-find-the-duplicate-number) |\n| [0344-reverse-string](https://github.com/SpideR1sh1/Leetcode/tree/master/0344-reverse-string) |\n| [0680-valid-palindrome-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0680-valid-palindrome-ii) |\n## Prefix Sum\n|  |\n| ------- |\n| [0238-product-of-array-except-self](https://github.com/SpideR1sh1/Leetcode/tree/master/0238-product-of-array-except-self) |\n## Counting\n|  |\n| ------- |\n| [1987-substrings-of-size-three-with-distinct-characters](https://github.com/SpideR1sh1/Leetcode/tree/master/1987-substrings-of-size-three-with-distinct-characters) |\n## Binary Search\n|  |\n| ------- |\n| [0033-search-in-rotated-sorted-array](https://github.com/SpideR1sh1/Leetcode/tree/master/0033-search-in-rotated-sorted-array) |\n| [0074-search-a-2d-matrix](https://github.com/SpideR1sh1/Leetcode/tree/master/0074-search-a-2d-matrix) |\n| [0081-search-in-rotated-sorted-array-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0081-search-in-rotated-sorted-array-ii) |\n| [0153-find-minimum-in-rotated-sorted-array](https://github.com/SpideR1sh1/Leetcode/tree/master/0153-find-minimum-in-rotated-sorted-array) |\n| [0167-two-sum-ii-input-array-is-sorted](https://github.com/SpideR1sh1/Leetcode/tree/master/0167-two-sum-ii-input-array-is-sorted) |\n| [0287-find-the-duplicate-number](https://github.com/SpideR1sh1/Leetcode/tree/master/0287-find-the-duplicate-number) |\n| [0792-binary-search](https://github.com/SpideR1sh1/Leetcode/tree/master/0792-binary-search) |\n| [0907-koko-eating-bananas](https://github.com/SpideR1sh1/Leetcode/tree/master/0907-koko-eating-bananas) |\n## Greedy\n|  |\n| ------- |\n| [0011-container-with-most-water](https://github.com/SpideR1sh1/Leetcode/tree/master/0011-container-with-most-water) |\n| [0680-valid-palindrome-ii](https://github.com/SpideR1sh1/Leetcode/tree/master/0680-valid-palindrome-ii) |\n## Matrix\n|  |\n| ------- |\n| [0074-search-a-2d-matrix](https://github.com/SpideR1sh1/Leetcode/tree/master/0074-search-a-2d-matrix) |\n## Stack\n|  |\n| ------- |\n| [0094-binary-tree-inorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0094-binary-tree-inorder-traversal) |\n| [0143-reorder-list](https://github.com/SpideR1sh1/Leetcode/tree/master/0143-reorder-list) |\n| [0144-binary-tree-preorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0144-binary-tree-preorder-traversal) |\n| [0145-binary-tree-postorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0145-binary-tree-postorder-traversal) |\n| [0776-n-ary-tree-postorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0776-n-ary-tree-postorder-traversal) |\n## Bit Manipulation\n|  |\n| ------- |\n| [0287-find-the-duplicate-number](https://github.com/SpideR1sh1/Leetcode/tree/master/0287-find-the-duplicate-number) |\n## Tree\n|  |\n| ------- |\n| [0094-binary-tree-inorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0094-binary-tree-inorder-traversal) |\n| [0098-validate-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0098-validate-binary-search-tree) |\n| [0100-same-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0100-same-tree) |\n| [0102-binary-tree-level-order-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0102-binary-tree-level-order-traversal) |\n| [0104-maximum-depth-of-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0104-maximum-depth-of-binary-tree) |\n| [0110-balanced-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0110-balanced-binary-tree) |\n| [0144-binary-tree-preorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0144-binary-tree-preorder-traversal) |\n| [0145-binary-tree-postorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0145-binary-tree-postorder-traversal) |\n| [0226-invert-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0226-invert-binary-tree) |\n| [0235-lowest-common-ancestor-of-a-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0235-lowest-common-ancestor-of-a-binary-search-tree) |\n| [0450-delete-node-in-a-bst](https://github.com/SpideR1sh1/Leetcode/tree/master/0450-delete-node-in-a-bst) |\n| [0543-diameter-of-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0543-diameter-of-binary-tree) |\n| [0572-subtree-of-another-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0572-subtree-of-another-tree) |\n| [0776-n-ary-tree-postorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0776-n-ary-tree-postorder-traversal) |\n| [0784-insert-into-a-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0784-insert-into-a-binary-search-tree) |\n## Depth-First Search\n|  |\n| ------- |\n| [0094-binary-tree-inorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0094-binary-tree-inorder-traversal) |\n| [0098-validate-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0098-validate-binary-search-tree) |\n| [0100-same-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0100-same-tree) |\n| [0104-maximum-depth-of-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0104-maximum-depth-of-binary-tree) |\n| [0110-balanced-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0110-balanced-binary-tree) |\n| [0144-binary-tree-preorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0144-binary-tree-preorder-traversal) |\n| [0145-binary-tree-postorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0145-binary-tree-postorder-traversal) |\n| [0226-invert-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0226-invert-binary-tree) |\n| [0235-lowest-common-ancestor-of-a-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0235-lowest-common-ancestor-of-a-binary-search-tree) |\n| [0543-diameter-of-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0543-diameter-of-binary-tree) |\n| [0572-subtree-of-another-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0572-subtree-of-another-tree) |\n| [0776-n-ary-tree-postorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0776-n-ary-tree-postorder-traversal) |\n## Breadth-First Search\n|  |\n| ------- |\n| [0100-same-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0100-same-tree) |\n| [0102-binary-tree-level-order-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0102-binary-tree-level-order-traversal) |\n| [0104-maximum-depth-of-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0104-maximum-depth-of-binary-tree) |\n| [0226-invert-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0226-invert-binary-tree) |\n## Binary Tree\n|  |\n| ------- |\n| [0094-binary-tree-inorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0094-binary-tree-inorder-traversal) |\n| [0098-validate-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0098-validate-binary-search-tree) |\n| [0100-same-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0100-same-tree) |\n| [0102-binary-tree-level-order-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0102-binary-tree-level-order-traversal) |\n| [0104-maximum-depth-of-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0104-maximum-depth-of-binary-tree) |\n| [0110-balanced-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0110-balanced-binary-tree) |\n| [0144-binary-tree-preorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0144-binary-tree-preorder-traversal) |\n| [0145-binary-tree-postorder-traversal](https://github.com/SpideR1sh1/Leetcode/tree/master/0145-binary-tree-postorder-traversal) |\n| [0226-invert-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0226-invert-binary-tree) |\n| [0235-lowest-common-ancestor-of-a-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0235-lowest-common-ancestor-of-a-binary-search-tree) |\n| [0450-delete-node-in-a-bst](https://github.com/SpideR1sh1/Leetcode/tree/master/0450-delete-node-in-a-bst) |\n| [0543-diameter-of-binary-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0543-diameter-of-binary-tree) |\n| [0572-subtree-of-another-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0572-subtree-of-another-tree) |\n| [0784-insert-into-a-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0784-insert-into-a-binary-search-tree) |\n## String Matching\n|  |\n| ------- |\n| [0572-subtree-of-another-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0572-subtree-of-another-tree) |\n## Hash Function\n|  |\n| ------- |\n| [0572-subtree-of-another-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0572-subtree-of-another-tree) |\n## Binary Search Tree\n|  |\n| ------- |\n| [0098-validate-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0098-validate-binary-search-tree) |\n| [0235-lowest-common-ancestor-of-a-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0235-lowest-common-ancestor-of-a-binary-search-tree) |\n| [0450-delete-node-in-a-bst](https://github.com/SpideR1sh1/Leetcode/tree/master/0450-delete-node-in-a-bst) |\n| [0784-insert-into-a-binary-search-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0784-insert-into-a-binary-search-tree) |\n## Design\n|  |\n| ------- |\n| [0208-implement-trie-prefix-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0208-implement-trie-prefix-tree) |\n| [0271-encode-and-decode-strings](https://github.com/SpideR1sh1/Leetcode/tree/master/0271-encode-and-decode-strings) |\n## Trie\n|  |\n| ------- |\n| [0208-implement-trie-prefix-tree](https://github.com/SpideR1sh1/Leetcode/tree/master/0208-implement-trie-prefix-tree) |\n<!---LeetCode Topics End-->", "prev_commits": ["Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Add files via upload", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md"], "title": "Leetcode", "owner": "SpideR1sh1", "commits": 35}