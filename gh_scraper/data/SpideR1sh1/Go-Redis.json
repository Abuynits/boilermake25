{"description": "Implemented a Redis-like in-memory database using Go, featuring RESP parsing, concurrency with Go routines, and an Append Only File (AOF) mechanism for data persistence. Supports key-value storage, hash commands, and handles multiple clients efficiently.", "readme": "\n# Build Redis From Scratch\n\nThis repository contains an implementation of a simplified Redis-like in-memory database built using Go. \nThe project follows a step-by-step guide and covers building a server, RESP parsing, implementing commands, and adding data persistence.\n\n---\n\n## **Features**\n\n1. **Custom Server**:\n   - Implements a custom TCP server to handle Redis-like client connections and requests.\n\n2. **RESP Parsing**:\n   - Built both a RESP reader and writer to handle Redis Serialization Protocol for processing client commands and sending responses.\n\n3. **Command Execution**:\n   - Supports core Redis commands for strings (`SET`, `GET`) and hashes (`HSET`, `HGET`).\n\n4. **Concurrency**:\n   - Utilized Go routines to handle multiple simultaneous client connections.\n\n5. **Data Persistence**:\n   - Developed an Append Only File (AOF) mechanism to log executed commands and restore the state upon server restart.\n\n6. **Scalable Design**:\n   - Modular code structure with individual files for server logic, RESP parsing, and AOF handling.\n\n---\n\n## **Installation**\n\n### **Prerequisites**\n- Go (version 1.18 or later)\n- Redis CLI (`redis-cli`)\n\n### **Setup**\n1. Clone the repository:\n   ```bash\n   git clone https://github.com/yourusername/build-redis-from-scratch.git\n   cd build-redis-from-scratch\n   ```\n\n2. Run the server:\n   ```bash\n   go run main.go\n   ```\n\n3. Interact with the server using `redis-cli`:\n   ```bash\n   redis-cli -h 127.0.0.1 -p 6379\n   ```\n\n---\n\n## **Implemented Commands**\n\n- **String Commands**:\n  - `SET key value`: Store a key-value pair.\n  - `GET key`: Retrieve the value associated with a key.\n\n- **Hash Commands**:\n  - `HSET key field value`: Set a field in a hash.\n  - `HGET key field`: Get the value of a field in a hash.\n\n---\n\n## **Project Structure**\n\n```\n.\n\u251c\u2500\u2500 aof.go         # Handles data persistence with Append Only File (AOF)\n\u251c\u2500\u2500 handler.go     # Contains logic to process client commands\n\u251c\u2500\u2500 main.go        # Entry point for the Redis server\n\u251c\u2500\u2500 resp.go        # Implements RESP parsing (reader and writer)\n\u2514\u2500\u2500 README.md      # Documentation\n```\n\n---\n\n## **How It Works**\n\n### 1. **RESP Parsing**\n- The server uses a custom RESP reader (`resp.go`) to decode incoming commands and a writer to encode responses.\n\n### 2. **Concurrency**\n- Uses Go routines to manage multiple client connections efficiently.\n\n### 3. **Data Persistence**\n- Implements AOF to store all executed commands for recovery during a server restart.\n\n---\n\n## **Usage Examples**\n\n### Setting and Getting a Key\n```bash\nredis-cli -h 127.0.0.1 -p 6379\n127.0.0.1:6379> SET name \"RedisClone\"\nOK\n127.0.0.1:6379> GET name\n\"RedisClone\"\n```\n\n### Using Hashes\n```bash\nredis-cli -h 127.0.0.1 -p 6379\n127.0.0.1:6379> HSET user name \"Alice\"\n1\n127.0.0.1:6379> HGET user name\n\"Alice\"\n```\n\n---\n\n## **Planned Features**\n\n- Add support for additional Redis data types (e.g., lists, sets, sorted sets).\n- Improve concurrency with better locking mechanisms.\n- Extend RESP parsing for pipelined commands.\n\n---\n\n## **License**\n\nThis project is licensed under the MIT License.\n", "prev_commits": ["Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Add files via upload", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md", "Update README.md"], "title": "Go-Redis", "owner": "SpideR1sh1", "commits": 5}