{"description": "A lightweight node.js web scraper to acquire, and then format the ranked list of runners for events listed in MileSplit.", "readme": "# MileSplit-Ranks-Web-Scraper\nA lightweight node.js web scraper to acquire, and then format the ranked list of runners for events listed in MileSplit. \n\n## Table of Contents \n- [MileSplit-Ranks-Web-Scraper](#milesplit-ranks-web-scraper)\n- [Explanation of Function](#explanation-of-function)\n- [Installation and Use](#installation-and-use)\n- [Sample Output](#sample-output)\n\n## Explanation of Function \nIf you've ever run XC or T&F at a non-professional level, your results were probably posted to [MileSplit](https://www.milesplit.com/), the \"premier network for track & field and cross country.\" Essentially, they host all the results of various races and meets throughout the United States and publish them in a navigable format with specific meet results, results by athlete, results by event, and so on, available. Unfortunately, a good deal of use of MileSplit requires a paid subscription to MileSplit. \n\n![having to pay image](readme/paying.png)\n\nThis scraper aims to provide a similarily readable ranked list of athletes by gender/region/event without a subscription to MileSplit. These lists ican be helpful when determining advancement to future meets or if you're just curious! \n\n## Installation and Use\n\n1. Download and install [node](https://nodejs.org/en/) \n2. Either download or clone the [repository](https://github.com/TheBlueness/MileSplit-Ranks-Web-Scraper)\n3. `cd` into the downloaded/extracted folder \n4. Run `npm install` \n5. [Edit the URL](https://github.com/TheBlueness/MileSplit-Ranks-Web-Scraper/blob/8736c4c85ee81c3b3b6c18ff3a284a61643240d7/gatherBasicInfo.js#L3-L6) of the rank list you'd like to scrape and gain access to \n6. Run `node gatherBasicInfo.js` followed by `node getTimesAndNames.js`\n7. The times are now viewable. Open `output/output.html`in your preferred web browser. \n\nTo save your results, copy the contents of the output folder to an external destination (e.g. your documents file). Running the program again with a different rank list URL will overwrite the existing output. \n\n## Sample Output \n![sample image](readme/sample-output.png)\n", "prev_commits": ["Fix sample output image alt", "Update readme with further instructions and image", "Add sample output image", "Added HTML export for easy viewing", "add changes before moving", "Get times and names more correctly than before", "who needs json files when we do it in arrays am i right", "code sucks less now", "Set-up for trying to make time requests in order in place", "Add js file to start getting times and names", "Finish gatherBasicInfo.js", "Delete .vscode directory", "Added function to get correct meet URLs", "Make image smaller again", "Made readme paying image smaller", "Updated readme.md", "Delete .DS_Store", "Added installation steps to readme.md", "Add previous somewhat working code", "Update .gitignore", "Expanded readme.md", "Initial commit"], "title": "MileSplit-Ranks-Web-Scraper", "owner": "JonathanOppenheimer", "commits": 22}